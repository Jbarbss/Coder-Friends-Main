{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Social Media Coders/client/src/components/posts/PostItem.js\";\n\n/* eslint-disable no-undef */\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  },\n  showActions\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  class: \"post bg-white p-1 my-1\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: `/profile/${user}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        class: \"round-img\",\n        src: avatar,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"my-1\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"post-date\",\n      children: [\"Posted on \", /*#__PURE__*/_jsxDEV(Moment, {\n        format: \"MM/DD/YYY\",\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), showActions && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => addLike(_id),\n        type: \"button\",\n        class: \"btn btn-light\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fas fa-thumbs-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: likes.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [likes.length, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => removeLike(_id),\n        type: \"button\",\n        class: \"btn btn-light\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fas fa-thumbs-down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/posts/${_id}`,\n        class: \"btn btn-primary\",\n        children: [\"Discussion\", ' ', comments.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"comment-count\",\n          children: comments.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), !auth.loading && user === auth.user._id && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => deletePost(_id),\n        type: \"button\",\n        class: \"btn btn-danger\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fas fa-times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this);\n\n_c = PostItem;\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"sources":["/Users/mac/Desktop/Social Media Coders/client/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","addLike","removeLike","deletePost","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","showActions","e","length","loading","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\n\nconst PostItem = ({\n    addLike,\n    removeLike,\n    deletePost,\n  auth,\n  post: { _id, text, name, avatar, user, likes, comments, date },\n  showActions\n}) => (\n  <div class='post bg-white p-1 my-1'>\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img class='round-img' src={avatar} alt='' />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p class='my-1'>{text}</p>\n      <p class='post-date'>\n        Posted on <Moment format='MM/DD/YYY'>{date}</Moment>\n      </p>\n\n      {showActions && <Fragment>\n        <button onClick={e => addLike(_id)} type='button' class='btn btn-light'>\n        <i class='fas fa-thumbs-up'></i>\n        <span>{likes.length > 0 && <span>{likes.length} </span> }</span>\n      </button>\n      <button onClick={e => removeLike(_id)} type='button' class='btn btn-light'>\n        <i class='fas fa-thumbs-down'></i>{' '}\n      </button>\n      <Link to={`/posts/${_id}`} class='btn btn-primary'>\n        Discussion{' '}\n        {comments.length > 0 &&\n          (<span class='comment-count'>{comments.length}</span>)}\n      </Link>\n      {!auth.loading && user === auth.user._id && (\n        <button onClick={e => deletePost(_id)} type='button' class='btn btn-danger'>\n          <i class='fas fa-times'></i>{' '}\n        </button>\n      )}\n        </Fragment>}\n      \n    </div>\n  </div>\n);\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(PostItem);\n"]},"metadata":{},"sourceType":"module"}