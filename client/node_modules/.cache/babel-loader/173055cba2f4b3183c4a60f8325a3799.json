{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Social Media Coders/client/src/components/posts/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getPost } from '../../actions/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = ({\n  getPost,\n  post: {\n    post,\n    loading\n  },\n  match\n}) => {\n  _s();\n\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n  return loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 20\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: \"post\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Post;\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Post);\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/mac/Desktop/Social Media Coders/client/src/components/posts/Posts.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getPost","Post","post","loading","match","params","id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,SAASC,OAAT,QAAwB,oBAAxB;;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAAED,EAAAA,OAAF;AAAWE,EAAAA,IAAI,EAAE;AAAEA,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAjB;AAAoCC,EAAAA;AAApC,CAAD,KAAiD;AAAA;;AAC5DR,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,OAAO,CAACI,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAP;AACD,GAFQ,EAEN,CAACN,OAAD,CAFM,CAAT;AAIA,SAAOG,OAAO,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAH,gBAGZ,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAOD,CAZD;;GAAMF,I;;KAAAA,I;AAcNA,IAAI,CAACM,SAAL,GAAiB;AACfP,EAAAA,OAAO,EAAEH,SAAS,CAACW,IAAV,CAAeC,UADT;AAEfP,EAAAA,IAAI,EAAEL,SAAS,CAACa,MAAV,CAAiBD;AAFR,CAAjB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCV,EAAAA,IAAI,EAAEU,KAAK,CAACV;AADsB,CAAZ,CAAxB;;AAIA,eAAeJ,OAAO,CAACa,eAAD,EAAkB;AAAEX,EAAAA;AAAF,CAAlB,CAAP,CAAsCC,IAAtC,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\n\nimport { getPost } from '../../actions/post';\n\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n\n  return loading ? <Spinner /> : ( \n\n  \n    <Fragment>\n  post\n    </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, { getPost })(Post);"]},"metadata":{},"sourceType":"module"}