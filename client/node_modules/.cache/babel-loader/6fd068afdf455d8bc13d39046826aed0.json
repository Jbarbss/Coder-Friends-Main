{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Social Media Coders/client/src/components/dashboard/dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth,\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  return loading && profile === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 42\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: \"test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 56\n  }, this);\n};\n\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Dashboard;\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/mac/Desktop/Social Media Coders/client/src/components/dashboard/dashboard.js"],"names":["React","Fragment","useEffect","PropTypes","connect","getCurrentProfile","Spinner","Dashboard","auth","profile","loading","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAAEF,EAAAA,iBAAF;AAAqBG,EAAAA,IAArB;AAA2BC,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAApC,CAAD,KAAgE;AAAA;;AAC9ER,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,iBAAiB;AACpB,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAOK,OAAO,IAAID,OAAO,KAAK,IAAvB,gBAA8B,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAA9B,gBAA4C,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAnD;AAGH,CARD;;GAAMF,S;;KAAAA,S;AAUNA,SAAS,CAACI,SAAV,GAAsB;AAClBN,EAAAA,iBAAiB,EAAEF,SAAS,CAACS,IAAV,CAAeC,UADhB;AAElBL,EAAAA,IAAI,EAAEL,SAAS,CAACW,MAAV,CAAiBD,UAFL;AAGlBJ,EAAAA,OAAO,EAAEN,SAAS,CAACW,MAAV,CAAiBD;AAHR,CAAtB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BR,EAAAA,IAAI,EAAEQ,KAAK,CAACR,IADkB;AAE9BC,EAAAA,OAAO,EAAEO,KAAK,CAACP;AAFe,CAAL,CAA7B;;AAKA,eAAeL,OAAO,CAACW,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAP,CAAgDE,SAAhD,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\n\n\nconst Dashboard = ({ getCurrentProfile, auth, profile: { profile, loading } }) => {\n    useEffect(() => {\n        getCurrentProfile();\n    }, []);\n\n    return loading && profile === null ? <Spinner /> : <Fragment>\n    test\n    </Fragment>\n}\n\nDashboard.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n})\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);"]},"metadata":{},"sourceType":"module"}